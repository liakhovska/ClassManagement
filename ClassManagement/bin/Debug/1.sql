use StepScheduler
--tables
create Table Users(  -- представляет пользователей приложения 
[UserId] int primary key identity(1,1),--РК
[Login] nvarchar (20) unique NOT NULL check ([Login]!=''), -- логин пользователя для авторизации ( должно быть уникальным и не пустым(больше проверок в приложении))
[Password] nvarchar (20) not null check ([Password]!=''), -- пароль пользователя для авторизации (не должно быть пустым(больше проверок в приложении))
[Photo] varbinary, 
[Name] nvarchar (20)  NOT NULL check ([Name]!=''),  -- имя пользователя (не должно быть пустым)
[Surname] nvarchar (20)  NOT NULL check ([Surname]!=''), -- фамилия пользователя (не должно быть пустым)
[PhoneNumber] nvarchar (max), -- контактный телефон пользователя (необязательно к заполнению)
[E-Mail] nvarchar (max), -- электронная пользователя (необязательно к заполнению)
[BirthDate] date, -- дата рождения пользователя (необязательно)
[Description] nvarchar (max) null, -- Краткое описание пользователя (пример: должность, основные темы для преподования)
[IsAdmin] bit default (0), -- Проверка : является ли данный пользователь администратором (по умолчанию false )
[IsBlocked] bit default (0), -- Проверка заблокирован ли пользователь (по умолчанию false) .Пример : пользователь ушел в отпуск/заболел/уволился .
);
create Table ClassRooms( --Представляет аудитории
 [ClassRoomId] int primary key identity(1,1), -- PK
 [Number] nvarchar(30) unique not null check ([Number]!=''),--Порядковый номер кабинета в здании (отсчет начинается с 1. Должно быть уникальным)
 [WorkPlacesCount] int not null  check ([WorkPlacesCount]>0),-- кол-во рабочих мест в аудитории (кол-во больше 0 . Макс кол-во мест неограничено?)
 [IsAvailable] bit not null default (1), -- Доступна ли аудитория для занятий (по умолчанию true) . пример false = закрыта на ремонт)
 [Description] nvarchar (max) null, -- краткое описание аудитории (пример  аудитория, ориентированная на дизайнеров/ конференц-зал)
);
create table Requests(-- Представляет заявку на бронирование
 [RequestId]int primary key identity(1,1), --РК
 [ClassRoomId]int not null,-- Желаемая аудитория для проведения события 
 [UserId] int not null, --Инфо о пользователе , который отправляет заявку
 [DateRequest]date not null default getdate(), --Дата подачи заявки на бронь. значение задается по умолчания (сегодня)
 [ClassDate] date not null,--Желаемая дата проведения события .Максимально-возможная дата - на 30дн позже даты оформления заявки
 [LessonNumber] int not null,--Номер пары по расписанию (значение от 1 ло 9) . Пример 1-ая пара 9:00 , 2-ая 10:30 , 8-ая 19:30. 
 [CountOfVisitors] int check ([CountOfVisitors]>=0), -- Ожимдаемое кол-во студентов/участников мероприятия (больше 0)
 [EventDescription] nvarchar (max) null, --краткое описания мероприятия или комментария(необязательно к заполнению). 
 [Status] int default (0) check ([Status]>=-1 and [Status]<=1), -- Статус заявки (значения от -1 до 1 , по умолчанию (0)). Пример: (-1) - заявка отклонена, (1) заявка принята,(0) - заявка еще не обработана
 [IsNew] bit default (1) -- Определяет является ли заявкой новой (по умолчанию true) . Пример заявка отправлена на расмотрение администрацией. После просмотра списка заявок значение переводится в "False"
);
create table ReservedRooms(
[ReservedRoomId] int primary key identity(1,1),
[RequestId] int not null ,--хранит информацию об утвержденной заявке на бронирование

[EventType] int not null check([EventType]>=0 and [EventType]<=2) -- хз зачем разделять(было в требованиях).
--Тип события. При подтверждении заявки выбирается тип события( 0-Обычное занятие , 1- Консультация , 2- Мероприятия).
);

--constraints
--Проверка даты бронирования
--alter table [Requests] add constraint ClassDateValidation
--check ([Requests].[ClassDate]<=dateadd(month,1,getdate())and [Requests].[ClassDate]>=getdate());
--Проверка корректности ввода пары
alter table [Requests] add constraint LessonNumValidation
check ([Requests].LessonNumber >0 and [Requests].[LessonNumber] <10)

--foreign keys
alter table Requests add foreign key ([UserId]) references Users  ([UserId]);
alter table Requests add foreign key ([ClassRoomId]) references ClassRooms ([ClassRoomId]);
alter table ReservedRooms add foreign key ([RequestId]) references Requests ([RequestId]);
--Начальные значения
--Users
insert into Users 
([Login],[Password],[Name],[Surname],[PhoneNumber],[E-mail],[BirthDate],[Description],[IsAdmin])
values ('admin','admin','Галина','НаБуквуМ','88005553535','StepManager@mail.ru','1999/10/10','Менеджер учебной части',1),
		('harl','harl','Вадим','Харламенко','3453534','harl@mail.ru','1995/12/3','Преподователь с++ с#',0),
		('rub','rub', 'Сергей','Рубан','63467777','rub@mail.ru','1992/3/16','Преподователь c++ c#',0),
		('redkina','redkina', 'Алла','Редькина','3333333','redkina@mail.ru','1999/2/25','Преподователь УПП',0),
		('march','march','Анатолий','Марченко','2222222','march@mail.ru','1941/12/14','Преподователь web ',0),
		('putin','putin','Владимир','Путин','44444444','putin@mail.ru','1991/5/17','Преподователь дизайна',0),
		('mka','mka','Андрей','Бубырь','77777777','mka@mail.ru','1990/3/27','Преподователь.Главный по МКА',1);
--classrooms
insert into ClassRooms  
values ('1',12,1,'для дизайнеров'),
		('2',15,1,'для презентаций'),
		('3',17,1,'для МКА'),
		('4',14,1,'кабинет дизайнеров'),
		('5',13,1,'цирк'),
		('6',12,1,'кабинет дизайнеров'),
		('7',17,0,'без электричества'),
		('8',15,1,'ьррьрльпл'),
		('9',10,1,'ратмитмт'),
		('10',11,0,'еукеукеуеке'),
		('11',19,1,'fdhdfhdfhdh'),
		('12',9,1,'667547'),
		('13',15,1,'кабинет дизайнеров'),
		('14',35,1,'Конференц-зал'),
		('Конференц-зал',50,1,'впыфа');
--requests
insert into Requests
(ClassRoomId,UserId,ClassDate,LessonNumber,CountOfVisitors,EventDescription)
values 
(5,2,'2019/12/15',1,14,'Занятие с группой КЦУ2020'),
(5,2,'2019/12/15',2,14,'Занятие с группой КЦУ2020'),
(1,3,'2019/12/15',3,9,'Занятие с группой КУК35'),
(1,3,'2019/12/15',4,9,'Занятие с группой КУК35'),
(2,4,'2019/12/15',5,7,'Занятие с группой ЕЕУ33'),
(2,5,'2019/12/16',5,5,'Консультация с группой ФЫВ342'),
(5,2,'2019/12/16',6,11,'Занятие с группой КЦУ2020'),
(7,6,'2019/12/16',1,12,'Занятие с группой ЕЕК3'),
(2,2,'2019/12/16',1,5,'Консультация с группой КЦУ2020'),
(14,7,'2019/12/17',6,100,'Мастер класс на тему "жопа"'),
(2,4,'2019/12/17',6,9,'Занятие с группой ЕЕУ33'),
(2,5,'2019/12/17',1,9,'Занятие с группой КЦУ2020'),
(1,5,'2019/12/17',2,9,'Занятие с группой КЦУ2020'),
(2,4,'2019/12/17',3,11,'Занятие с группой ФЫВ342'),
(2,4,'2019/12/17',4,11,'Занятие с группой ФЫв342'),
(8,3,'2019/12/17',5,5,'Консультация с группой КЦУ2020'),
(8,4,'2019/12/17',5,5,'Консультация с группой ЕЕК3'),
(4,2,'2019/12/21',7,14,'Занятие с группой ИИИ34'),
(4,2,'2019/12/21',8,12,'Занятие с группой ИИИ34'),
(3,6,'2019/12/21',3,6,'Консультация с группой ЫВАЫВ'),
(5,5,'2019/12/21',1,14,'Занятие с группой ЕЕЕ'),
(5,5,'2019/12/21',2,14,'Занятие с группой ЕЕЕ'),
(12,3,'2019/12/21',1,14,'Занятие с группой ЕЕК3'),
(12,3,'2019/12/23',1,13,'Занятие с группой ЕЕК3'),
(14,4,'2019/12/23',1,14,'Занятие с группой ИИИ34'),
(14,4,'2019/12/23',4,10,'Занятие с группой ИИИ34'),
(9,5,'2019/12/23',5,10,'Занятие с группой КЦУ2020'),
(9,3,'2019/12/23',1,14,'Занятие с группой КЦУ2020'),
(6,6,'2019/12/23',3,5,'Консультация '),
(7,4,'2019/12/23',1,11,'Занятие с группой КЦУ2020'),
(7,4,'2019/12/23',2,11,'Занятие с группой КЦУ2020'),
(14,4,'2019/12/23',5,55,'Мастер класс'),
(2,3,'2019/12/23',3,6,'Консультация КЦУ2020'),
(4,5,'2019/12/25',3,3,'Консультация ЕЕЕ34'),
(5,2,'2019/12/25',7,14,'Занятие с группой КЦУ2020'),
(5,2,'2019/12/25',8,14,'Занятие с группой КЦУ2020'),
(2,3,'2019/12/25',6,13,'Занятие с группой КЦУ2020'),
(5,4,'2019/12/25',6,11,'Занятие с группой ИИИ32'),
(7,3,'2019/12/24',3,14,'Консультация с группой КЦУ2020'),
(11,5,'2019/12/24',1,8,'Занятие с группой ФЫВ33'),
(11,5,'2019/12/24',2,8,'Занятие с группой ФЫВ33'),
(7,2,'2019/12/24',1,13,'Занятие с группой КЦУ2020');
--reservedrooms  ПРЕДСТАВИМ ЧТО ОНИ ОДОБРЕННЫЕ И ВНЕСЕНЫ В РАСПИСАНИЕ 
--(программно это будет удобнее намного)
insert into ReservedRooms
(RequestId,EventType)
values  
(1,0),(4,0),(5,0),(6,2),
(2,1),(1,1),(15,2),(17,1),
(13,0),(14,0),(18,0),(24,0),
(31,0),(41,2),(39,1),(5,1),
(7,1),(8,0),(22,0),(33,0);

insert into Requests 
values (3,2,getdate(),'2019/12/24',1,1,'wer',0,0),
(3,2,getdate(),'2019/12/24',9,1,'wer',0,0)
